
version: '3'
services:

  postgres_db:
    build: .
    container_name: postgres_db
    restart: always
    networks:
      - db-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}


  my-app2:
    build:  ../diplomBackend
    container_name: spring-backend2
    networks:
      - spring-network
      - db-network
    ports:
      - "8080:8080"
    environment: 
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres_db


  py-service:
    build:  ../pythonProject
    container_name: py-service
    networks:
      - spring-network

networks:
  db-network:
    driver: bridge
    # internal: true # Установите внутренний режим для ограничения доступа с хоста
  spring-network:
    driver: bridge

